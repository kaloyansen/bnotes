#!/usr/bin/perl -w

package Freedom;
use strict;
use warnings;
use vars qw($WWW $BIN $DATA $PLOT $CGI $DBH $STYLE $CONTROL);
use DBI;

sub islocal {
    return 1 if ($ENV{HTTP_HOST} && $ENV{HTTP_HOST} =~ /local/); 
    return 0;
}

sub style {
    $STYLE = my_style();
    return $STYLE;}

sub www {
    if (Freedom::islocal()) {$WWW = '/www';} else {$WWW = '/~morla/www';}
    return $WWW;
}

sub bin {
    if (Freedom::islocal()) {$BIN = '/cgi-bin';} else {$BIN = '/~morla/www/cgi-bin';}
    return $BIN;
}

sub data {
    if (Freedom::islocal()) {$DATA = '/home/kkrastev/public_html/www/data';} else {$DATA = '/home/m/morla/public_html/www/data';}
    return $DATA;
}

sub plot {
    if (Freedom::islocal()) {$DATA = '/home/kkrastev/public_html/www/data';} else {$DATA = '/home/m/morla/public_html/www/data';}
    return $DATA;
#    if (Freedom::islocal()) {$PLOT = '/home/kkrastev/Myxa/mode/srv/www/plot';} else {$PLOT = '/home/m/morla/public_html/www/plot';}
#    return $PLOT;
}


sub db_disconnect {

    my $dbh = shift;
    $dbh->disconnect if $dbh;
}

sub db_connect {

    my $db_driver = shift;
    my $db_host = shift;
    my $db_database = shift;
    my $db_user = shift;
    my $db_password = shift;

    my $db_src = "DBI:$db_driver:database=$db_database;host=$db_host";

    # my $base   = 'mysql';
    # my $db     = 'morla';
    # my $user   = 'morla';
    # my $pass   = 'imrqEXtYXSn6BgQq';
    # unless (Freedom::islocal()) {
    #     $db     = 'morla';
    #     $user   = 'morla';
    #     $pass   = 'imrqEXtYXSn6BgQq';
    # }
    my $dbh = DBI->connect($db_src, $db_user, $db_password);
    return $dbh if $dbh;
    print("Cannot connect: " . DBI::errstr);
}

sub printHeader {
    $CGI   = shift;
    my $bg = shift;

    print $CGI->header(-charset=>'utf-8',		       -expires=>'now');
    print $CGI->comment("Generated by perl CGI // Author: Kaloyan Krastev");
    print $CGI->start_html(-title=>'Партия на Свободата',   -encoding=>'utf8',	   -lang=>'bg',	  -bgcolor=>$bg,   -text=>'#B0D0F0');
    print $CGI->Link({-rel=>'shortcut icon',		      -href=>"/icons/freedom.gif",		      -type=>'image/x-icon'});

    Freedom::printMenu($CGI);
}

sub printMenu {
    $CGI = shift;     
    Freedom::bin();
    
    my %title_action = ('home'                            => "$BIN/party.cgi", 
			'documents'                       => "/docs/",#ne raboti 
			'registration'                    => "$BIN/register.cgi", 
			'forum(!)'                        => "$BIN/members/forum.cgi", 
			'elections(!)'                    => "$BIN/members/esg.cgi", 
			'members(!)'                      => "$BIN/members/members.cgi", 
			'manage(!!)'                      => "$BIN/secure/manager.cgi");

    print '<table>';
    for (keys %title_action) { 		Freedom::addSubmitForm($CGI, $_, $title_action{$_}, 'submit_menu');     	    }
    print '</table>';
    print '<table><BR></BR>';
} #======     ======     ======     ======     ======     ======     ======     ======     ======     ======     ======     ======     
#  USER   ======     ======     ======     ======     ======     ======     ======     ======     ======     ======    
sub printFooter {#======     ======     ======     ======     ======     ======     ======     ======     ======     ======    
    $CGI = shift;   
    my $size = 'height=33px width=99px';
    print qq{<BR></BR> <BR></BR> <BR></BR>   </table> <table width=100%> <tr>
<td align = center><a href=https://nic-nac-project.org>      <img src=/icons/nnp.jpg       $size></a></td>
<td align = center><a href=http://httpd.apache.org>          <img src=/icons/apache.gif    $size></a></td>
<td align = center><a href=http://www.perl.org>              <img src=/icons/perl-logo.jpg $size></a></td>
<td align = center><a href=http://perldoc.perl.org/CGI.html> <img src=/icons/perl-cgi.gif  $size></a></td>
<td align = center><a href=http://www.gnu.org/software/emacs><img src=/icons/emacs_48.png  $size></a></td>
<td align = center><a href=http://www.latex-progect.org>     <img src=/icons/latex.png     $size></a></td>
        </tr>
</table>
	};

    print $CGI->end_html;                
}

sub my_style {
    my $bg                   = shift;
    my $fg                   = shift;
    my $font                 = shift;
    my $width                = shift;
    unless ($bg)    {$bg     = Freedom::random_dark(); }
    unless ($fg)    {$fg     = Freedom::random_light(); }
    unless ($font)  {$font   = 'large'; }
    unless ($width) {$width  = 333; } else { $width = $width * 150; } 

    my $style;
    $style .= ';color:'."$fg";
    $style .= ';background-color:'."$bg";
    $style .= ';border:0px solid #010203';
    $style .= ';font-weight:bold';
    $style .= ';font-size:'."$font";
    $style .= ';min-width:'."$width".'px';
#    $style .= ";height:100px";
    $style .= ";text-align: left";
    $style .= ";opacity: 0.88";

#    $style .= ";margin: 0px";
#    $style .= ";padding: 0px";
#    $style .= ";margin-top: 0px";
    $style .= ";margin-bottom: 10px";
#    $style .= ";margin-left: 0px";
    $style .= ";margin-right: 10px";
#    $style .= ";padding-top: 0px";
#    $style .= ";padding-bottom: 0px";
    $style .= ";padding-left: 33px"; 
#    $style .= ";padding-right: 33px"; 
    $STYLE = $style;
    return $style;
}


sub random_dark {
    my @colors = ( 'darkcyan', 'darkmagenta');
    return $colors[rand($#colors + 1)];
}

sub random_light {
    my @colors = ( 'orange', 'violet');
    return $colors[rand($#colors + 1)];
}

sub addSubmitForm {
    $CGI       = shift;
    my $value  = shift;
    my $action = shift;
    my $name   = shift;
    my $bg     = shift;
    my $fg     = shift;
    my $font   = shift;
    my $width  = shift;
    my $style  = Freedom::my_style($bg, $fg, $font, $width);

    print $CGI->start_form(-action=>$action); 
    print $CGI->submit(-name=>$name,
		       -action=>$action,
		       -override=>0,
		       -value=>$value,
		       -style=>$style
	);
    print $CGI->end_form; 
}

sub addSubmit {
    $CGI       = shift;
    my $value  = shift;
    my $action = shift;
    my $name   = shift;
    my $bg     = shift;
    my $fg     = shift;
    my $font   = shift;
    my $width  = shift;
    my $style  = Freedom::my_style($bg, $fg, $font, $width);

    print $CGI->submit(-name=>$name,
		       -action=>$action,
		       -value=>$value,
		       -override=>0,
		       -style=>$style
	);
}

sub addFreeSubmit {
    $CGI       = shift;
    my $value  = shift;
    my $action = shift;
    my $name   = shift;
    my $bg     = shift;
    my $fg     = shift;
    my $font   = shift;
    my $width  = shift;
    my $style  = Freedom::my_style($bg, $fg, $font, $width);

    my $img    = "/icons/speaker.gif";
    $style .= ";background:url($img)";


    print $CGI->submit(-name=>$name,
		       -action=>$action,
		       -value=>$value,
		       -override=>0,
		       -style=>$style
	);
}

sub countVisits {
    data();
    my $file;
    return 0 unless $file = $ENV{SCRIPT_NAME};
    $file =~ s/\//_/g;
    my $counter = "$DATA/$file.log";
    my $visits;
    if (open(COUNTER, "$counter")) {
	$visits=<COUNTER>;
	close(COUNTER);
    } else { print "read:$counter: $!"; }
    $visits++;   
    if (open(COUNTER, ">$counter")) {#    seek(COUNTER,0 ,0);                          #rewind the file.
	print COUNTER $visits;
	close(COUNTER);
    } else { print "write:$counter: $!"; }
    return $visits;
}

sub activeTitle {
    $DBH        = shift;
    my $USER    = shift;
    my $MENU    = shift;
    my $SUBMIT  = 'submit_kakvotoIDaE';
    $CGI        = new CGI;

    my $TITLE = "$USER\@$MENU" ;

    print $CGI->br;
    print $CGI->br;

    my $jus = 7;

    unless ($DBH) {
	Freedom::addSubmitForm($CGI, $TITLE, '', 'lijdl', Freedom::random_dark(), 'black', 'xx-large', $jus);
	return;
    } 

#           password from file 
#	    my $command  = "/usr/bin/htpasswd2 -b $DATA/.htpasswd2 $USER $password 2>&1";
#	    my $answer   = `$command`;
#	    print $CGI->span({-style=>$ztyle}, $answer);


    unless ($CGI->param($SUBMIT)) { 
	unless ($USER eq 'guest') {Freedom::addSubmitForm($CGI, $TITLE, '', $SUBMIT, Freedom::random_dark(), 'black', 'xx-large', $jus);
	} else { ;
	}
    } else {
	my $ztyle = Freedom::my_style('black', 'red', 'large', $jus);
	if ($CGI->param('oldpass') && $CGI->param('newpass') && $CGI->param('repass')) {
	    if  ($CGI->param('newpass') eq $CGI->param('repass')) { 
		data();
		my $oldpasswd = $CGI->param('oldpass');
		my $newpasswd = $CGI->param('newpass');
		my $where = "name = '$USER' AND passwd = ENCRYPT('$oldpasswd')";
		print $where;
		if (Freedom::db_select_num_row($DBH, "SELECT * FROM table_user WHERE $where")) {
		    Freedom::sqlExec($DBH, "UPDATE table_user SET passwd = ENCRYPT('$newpasswd') WHERE $where");
		    print 'done';
		} else {
		    print 'wrong password';
		}
	    } else {
		print 'no match';
	    }
	} else {
	    print $CGI->start_form;
	    print $CGI->span({-style=>$ztyle},'<br>old password', $CGI->password_field(-name=>'oldpass',-override=>1,-size=>20,-maxlength=>30));
	    print $CGI->span({-style=>$ztyle},'<br>your new password', $CGI->password_field(-name=>'newpass',-override=>1,-size=>20,-maxlength=>30));
	    print $CGI->span({-style=>$ztyle},'<br>your new password again', $CGI->password_field(-name=>'repass',-override=>1,-size=>20,-maxlength=>30));
	    print '<p>';
	    Freedom::addSubmit($CGI, "change password for $USER", '', $SUBMIT);
	    print $CGI->end_form;
	}
    }

    print '<BR></BR><BR></BR><BR></BR><BR></BR><BR></BR>';
} 






# sql




sub sqlDumpSelect {
    $DBH        = shift;
    my $sql     = shift;
    my $debug   = shift;
    my $result;
    $result = Freedom::db_select($DBH, $sql, $debug);

    print "<TABLE width=100%>";
    foreach my $row (@$result) {
	print '<TR>', 
	join("\n", map("<TD BGCOLOR = '#120034' TEXTCOLOR= 'white'><B>" . $_ . '</B></TD>', @$row)), 
	'</TR>';    }
    print '</TABLE>';

    return $result;
}



sub db_select_row {
    return Freedom::db_select(shift, shift, shift);
}

sub db_select_array {
    return Freedom::db_select(shift, shift, shift);
}

sub db_select {
    $DBH      = shift;
    my $sql   = shift;
    my $debug = shift; 
    my @results;
    my $smiley ="'\x{263a}'";
    print ($smiley.$sql.$smiley.'<br>') if ($debug);

    if ($sql) {
	unless (my $sth = $DBH->prepare($sql)) { print ("Cannot prepare " . $DBH->errstr()); 
	} else {	    unless ($sth->execute()) { print ("Cannot execute: " . $sth->errstr());     
	    } else {
		my @row;
		while (@row = $sth->fetchrow_array()) {
		    my @record = @row;
		    push (@results, \@record);  
		}
		$sth->finish();
	    }
	}
    }
    return \@results;
}

sub db_select_num_row {
    $DBH      = shift;
    my $sql   = shift;
    my $debug = shift; 
    my $num_rows  = 0;
    my $sth;
    my $smiley ="'\x{263a}'";
    print $smiley.$sql.$smiley if ($debug);
    unless ($sth = $DBH->prepare($sql)) { print ("Cannot prepare " . $DBH->errstr()); 
    } else {	unless ($sth->execute()) { print ("Cannot execute: " . $sth->errstr());     
	} else {	    $num_rows = $sth->rows;	    $sth->finish();	}    }
    return $num_rows;
}

sub sqlExec {
    $DBH       = shift;
    my $sql    = shift;
    my $debug  = shift; 
    my $smiley ="'\x{263a}'";
    print $smiley.$sql.$smiley.'\n' if ($debug);

    unless (my $sth = $DBH->prepare($sql)) { print ("Cannot prepare " . $DBH->errstr()); 
    } else {	unless ($sth->execute()) { print ("Cannot execute: " . $sth->errstr());     
	} else {	    $sth->finish();	}    }
}







sub sqlDropTable {
    $DBH      = shift;
    my $table = shift;
    Freedom::sqlExec($DBH, "DROP TABLE $table", 1);
}




1;
